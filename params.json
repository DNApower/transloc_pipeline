{"name":"Translocation Sequencing (HTGTS) Pipeline","tagline":"High-Throughput Genome-Wide Translocation Sequencing - Alt Lab","body":"# Installation\r\n\r\n## Download code\r\n\r\n```\r\ncd ~\r\ngit clone https://github.com/robinmeyers/transloc_pipeline.git\r\n```\r\n\r\nAdd directories to $PATH in ~/.profile or ~/.bash_profile\r\n\r\n```\r\necho 'export PATH=~/transloc_pipeline/bin:~/transloc_pipeline/R:$PATH' >> ~/.bash_profile\r\n```\r\n\r\n## Reference Genomes\r\n\r\n```\r\nmkdir -p ~/genomes/bowtie2_indexes\r\ncd ~/genomes/bowtie2_indexes\r\nwget ftp://ftp.ccb.jhu.edu/pub/data/bowtie2_indexes/hg19.zip\r\nunzip hg19.zip\r\nmkdir ~/genomes/hg19\r\nbowtie2-inspect hg19 > ~/genomes/hg19/hg19.fa \r\n```\r\n\r\nAdd environment variables to in ~/.profile or ~/.bash_profile\r\n\r\n```\r\necho 'export BOWTIE2_INDEXES=~/genomes/bowtie2_indexes' >> ~/.bash_profile\r\necho 'export GENOME_DB=~/genomes' >> ~/.bash_profile\r\n```\r\n\r\n\r\n\r\n## Dependencies\r\n\r\n### Bowtie2\r\n\r\nInstall [Bowtie2](http://bowtie-bio.sourceforge.net/bowtie2/index.shtml)\r\n\r\nIf using homebrew:\r\n```\r\n$ brew tap homebrew/science\r\n$ brew install bowtie2\r\n```\r\n\r\n### Perl >= 5.16\r\n\r\nInstall [Bioperl](http://www.bioperl.org/wiki/Installing_BioPerl_on_Unix)\r\n\r\n```\r\n$ cpan\r\n```\r\nFind the most recent version\r\n\r\n```\r\ncpan> d /bioperl/\r\nDistribution    CJFIELDS/BioPerl-1.6.901.tar.gz\r\nDistribution    CJFIELDS/BioPerl-1.6.923.tar.gz\r\nDistribution    CJFIELDS/BioPerl-1.6.924.tar.gz\r\n```\r\n\r\nNow install:\r\n\r\n```\r\ncpan> install CJFIELDS/BioPerl-1.6.924.tar.gz\r\n```\r\nor\r\n```\r\ncpan> force install CJFIELDS/BioPerl-1.6.924.tar.gz\r\n```\r\n\r\nOther modules:\r\n\r\n- \r\n\r\n\r\n# Running the Pipeline\r\n\r\n\r\n## Pre-processing libraries\r\n\r\nThe Alt Lab primarily uses in-line barcodes (sequenced by the MiSeq at the head of the forward read) and then deconvolutes pooled libraries using this program. This script also calls an external tool to trim Illumina adapter sequence. If using Illumina multi-plex barcoding strategy, this script will not be useful except for trimming adapters, which is still recommended.\r\n\r\n### Starting from pooled library fastq files\r\nDeconvolutes and trims adapters\r\n```\r\n$ cd ~/transloc_pipeline/data\r\n$ TranslocPreprocess.pl metadata.txt preprocess/ --read1 pooled_R1.fq.gz --read2 pooled_R2.fq.gz\r\n```\r\n\r\n### Starting from deconvoluted fastq files\r\nJust trims adapters\r\n```\r\n$ cd ~/transloc_pipeline/data\r\n$ TranslocPreprocess.pl metadata.txt preprocess/ --indir ./\r\n```\r\n\r\n## Running the pipeline\r\n\r\n```\r\n$ TranslocWrapper.pl metadata.txt preprocess/ results/ --threads 2\r\n```\r\n\r\n# Filtering\r\n\r\nThe TranslocPipeline main output is the *.tlx file. One master tlx file will be generated per library. It can be thought of as similar to a sam file for NGS libraries. It contains output for every read in the library, and will serve as the starting point for all down-stream analyses. However, for most analyses, it will need to be filtered into only the required reads for the specific analysis. There is a default filtering that the pipeline will generate automatically. For any other filtering regime, the user will have to re-filter the master tlx file.\r\n\r\n## Available filters\r\n\r\n**- unaligned:** No OCS alignments.\r\n\r\n**- baitonly:** Bait alignment is either the only alignent in the OCS or  only followed by adapter alignment.\r\n\r\n**- uncut:** Bait alignment runs greater than some number of bases past the cutsite.\r\n\r\n**- misprimed:** Bait alignment runs fewer than some number of bases past the primer.\r\n\r\n**- freqcut:** Restriction enzyme site within some number of bases from the junction. (Fairly depricated.)\r\n\r\n**- largegap:** More than some number of bases between the bait and prey alignments.\r\n\r\n**- mapqual:** OCS had a competing prey junction.\r\n\r\n**- breaksite:** Prey alignment maps into non-endogenous breaksite cassette. (Fairly depricated.)\r\n\r\n**- sequential:** Junction occurs downstream on read from first bait-prey junction.\r\n\r\n\r\n## Re-filtering a library\r\n\r\n```\r\n$ TranslocFilter.pl results/RF204_Alt055/RF204_Alt055.tlx results/RF204_Alt055_refiltered.tlx --filters \"\"\r\n```\r\n\r\n### Ex. 1 Keep duplicate junctions\r\n\r\n```\r\n$ TranslocFilter.pl results/RF204_Alt055/RF204_Alt055.tlx results/RF204_Alt055_refiltered.tlx --filters \"\"\r\n```\r\n\r\n### Ex. 2 Keep all un-translocated reads\r\n\r\n```\r\n$ TranslocFilter.pl results/RF204_Alt055/RF204_Alt055.tlx results/RF204_Alt055_refiltered.tlx --filters \"\"\r\n```\r\n\r\n### Using a config file\r\n\r\n# Hotspot Detection\r\n\r\nTwo methods of detecting hotspots.\r\n\r\n## Using MACS2 to do translocaiton peak detection\r\n\r\nMust have MACS2 installed.\r\n\r\n```\r\n$ tlx2BED-MACS.pl\r\n$ macs2\r\n```\r\n\r\n## Using scan statistics script to call peaks\r\n```\r\n$ TranslocHotspots.R\r\n```\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}